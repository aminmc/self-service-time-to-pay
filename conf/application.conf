# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName="self-service-time-to-pay"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.app.routes`.
# Default to Routes in the root package (and `conf/app.routes`)
application.router=prod.Routes

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=uk.gov.hmrc.ssttp.config.SsttpMicroserviceGlobal

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"


microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  services {
    self-service-time-to-pay-frontend{
      host=localhost
      port=9000
    }

  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token=N/A
  host=auto
}

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

Dev {
  filter.whitelist.enabled = false

  auditing {
    enabled = true
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }
}

Test {


  auditing {
    enabled = false
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }
}

Prod {
  auditing {
    enabled = true
    traceRequests = false
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }
}